source("run_loaders_analyzers.R")
# selected params for run
death.causes <- c("Despair","Cancer","Assault","Cardiovascular")
input <- list(state_choice = state.abb[1],
death_cause = death.causes[1])
# Cache of UNORDERED mortality trend cluster label calculation
mort.cluster.raw <- function() {
# Variables:
#   - county_fips
#   - cluster
# Currently hard-coded 4 clusters
cdc.data %>%
cdc.mort.mat(input$state_choice, input$death_cause) %>%
km.func(4)
}
# # Cache of Weighed Avg by UNORDERED cluster
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
# # Cache of Weighed Avg by UNORDERED cluster
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
# mort.avg.cluster.raw <- function() {
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   # Variables:
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#   #   - period
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#   #   - cluster
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#   #   - death_rate
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#   #   - count
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#   # Notes:
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#   #   - The cluster labels are UNORDERED
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
#   cdc.data %>%
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#     dplyr::filter(state_abbr == input$state_choice, death_cause == input$death_cause) %>%
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
#     dplyr::right_join(mort.cluster.raw(), by = "county_fips") %>%
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
#     dplyr::group_by(period, cluster) %>%
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#     dplyr::summarise(
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#
#       death_rate = sum(death_num) / sum(population) * 10^5,
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#
#   # Variables:
#       count = n()
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#
#   # Variables:
#   #   - ord
#     ) %>%
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#
#   # Variables:
#   #   - ord
#
#     dplyr::ungroup()
# }
#
# # Cache of MAPPING from UNORDERED mortality trend label to ORDERED mortality trend label
# mort.cluster.map <- function() {
#
#   # Variables:
#   #   - ord
#
#   # Notes:
source('~/Desktop/MortalityMinder/DeepDive/run_app_analysis.R')
source('~/Desktop/MortalityMinder/DeepDive/run_app_analysis.R')
library(packrat)
source("run_loaders_analyzers.R")
source("run_loaders_analyzers.R")
mort.cluster.raw()
library(plyr)
library(dplyr)
mort.cluster.raw()
source
source()
source("~/Desktop")
source("run_loaders_analyzers.R")
# Cache of UNORDERED mortality trend cluster label calculation
mort.cluster.raw <- function() {
# Variables:
#   - county_fips
#   - cluster
# Currently hard-coded 4 clusters
cdc.data dplyr::%>%
cdc.mort.mat(input$state_choice, input$death_cause) dplyr::%>%
km.func(4)
}
mort.cluster.raw <- function() {
# Variables:
#   - county_fips
#   - cluster
# Currently hard-coded 4 clusters
cdc.data %>%
cdc.mort.mat(input$state_choice, input$death_cause) %>%
km.func(4)
}
mort.cluster.raw()
library(dplyr)
mort.cluster.raw()
1 %>% c()
1 dplyr::%>% c()
1 (dplyr::%>%) c()
